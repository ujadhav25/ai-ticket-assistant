{"version":3,"sources":["../src/server.ts"],"sourcesContent":["import { Inngest, slugify, type InngestFunction } from \"inngest\";\nimport { createServer as createInngestServer } from \"inngest/node\";\nimport { type Agent } from \"./agent\";\nimport { type Network } from \"./network\";\n\n/**\n * Create a server to serve Agents and Networks as Inngest functions\n *\n * @example\n * ```ts\n * import { createServer, createAgent, createNetwork } from \"@inngest/agent-kit\";\n *\n * const myAgent = createAgent(...);\n * const myNetwork = createNetwork(...);\n * const server = createServer({\n *   agents: [myAgent],\n *   networks: [myNetworks],\n * });\n * server.listen(3000)\n * ```\n *\n * @public\n */\nexport const createServer = ({\n  appId = \"agent-kit\",\n  networks = [],\n  agents = [],\n  client,\n  functions: manualFns = [],\n}: {\n  appId?: string;\n  networks?: Network<any>[]; // eslint-disable-line @typescript-eslint/no-explicit-any\n  agents?: Agent<any>[]; // eslint-disable-line @typescript-eslint/no-explicit-any\n  functions?: InngestFunction.Any[];\n  client?: Inngest.Any;\n}) => {\n  const inngest = client ?? new Inngest({ id: appId });\n\n  const functions = manualFns.reduce<Record<string, InngestFunction.Any>>(\n    (acc, fn) => {\n      return {\n        ...acc,\n        [fn.id()]: fn,\n      };\n    },\n    {}\n  );\n\n  for (const agent of agents) {\n    const slug = slugify(agent.name);\n    const id = `agent-${slug}`;\n\n    functions[id] = inngest.createFunction(\n      { id, name: agent.name, optimizeParallelism: true },\n      { event: `${inngest.id}/${id}` },\n      async ({ event }) => {\n        // eslint-disable-next-line\n        return agent.run(event.data.input);\n      }\n    );\n  }\n\n  for (const network of networks) {\n    const slug = slugify(network.name);\n    const id = `network-${slug}`;\n\n    functions[id] = inngest.createFunction(\n      { id, name: network.name, optimizeParallelism: true },\n      { event: `${inngest.id}/${id}` },\n      async ({ event }) => {\n        // eslint-disable-next-line\n        return network.run(event.data.input);\n      }\n    );\n  }\n\n  return createInngestServer({\n    client: inngest,\n    functions: Object.values(functions),\n  });\n};\n"],"mappings":";;;;;;AAAA,SAAS,SAAS,eAAqC;AACvD,SAAS,gBAAgB,2BAA2B;AAsB7C,IAAM,eAAe,CAAC;AAAA,EAC3B,QAAQ;AAAA,EACR,WAAW,CAAC;AAAA,EACZ,SAAS,CAAC;AAAA,EACV;AAAA,EACA,WAAW,YAAY,CAAC;AAC1B,MAMM;AACJ,QAAM,UAAU,0BAAU,IAAI,QAAQ,EAAE,IAAI,MAAM,CAAC;AAEnD,QAAM,YAAY,UAAU;AAAA,IAC1B,CAAC,KAAK,OAAO;AACX,aAAO,iCACF,MADE;AAAA,QAEL,CAAC,GAAG,GAAG,CAAC,GAAG;AAAA,MACb;AAAA,IACF;AAAA,IACA,CAAC;AAAA,EACH;AAEA,aAAW,SAAS,QAAQ;AAC1B,UAAM,OAAO,QAAQ,MAAM,IAAI;AAC/B,UAAM,KAAK,SAAS,IAAI;AAExB,cAAU,EAAE,IAAI,QAAQ;AAAA,MACtB,EAAE,IAAI,MAAM,MAAM,MAAM,qBAAqB,KAAK;AAAA,MAClD,EAAE,OAAO,GAAG,QAAQ,EAAE,IAAI,EAAE,GAAG;AAAA,MAC/B,OAAO,EAAE,MAAM,MAAM;AAEnB,eAAO,MAAM,IAAI,MAAM,KAAK,KAAK;AAAA,MACnC;AAAA,IACF;AAAA,EACF;AAEA,aAAW,WAAW,UAAU;AAC9B,UAAM,OAAO,QAAQ,QAAQ,IAAI;AACjC,UAAM,KAAK,WAAW,IAAI;AAE1B,cAAU,EAAE,IAAI,QAAQ;AAAA,MACtB,EAAE,IAAI,MAAM,QAAQ,MAAM,qBAAqB,KAAK;AAAA,MACpD,EAAE,OAAO,GAAG,QAAQ,EAAE,IAAI,EAAE,GAAG;AAAA,MAC/B,OAAO,EAAE,MAAM,MAAM;AAEnB,eAAO,QAAQ,IAAI,MAAM,KAAK,KAAK;AAAA,MACrC;AAAA,IACF;AAAA,EACF;AAEA,SAAO,oBAAoB;AAAA,IACzB,QAAQ;AAAA,IACR,WAAW,OAAO,OAAO,SAAS;AAAA,EACpC,CAAC;AACH;","names":[]}