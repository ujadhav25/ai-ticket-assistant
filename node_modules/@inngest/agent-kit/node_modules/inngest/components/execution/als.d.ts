import { type Context } from "../../types.js";
export interface AsyncContext {
    ctx: Context.Any;
}
/**
 * A type that represents a partial, runtime-agnostic interface of
 * `AsyncLocalStorage`.
 */
type AsyncLocalStorageIsh = {
    getStore: () => AsyncContext | undefined;
    run: <R>(store: AsyncContext, fn: () => R) => R;
};
/**
 * Retrieve the async context for the current execution.
 */
export declare const getAsyncCtx: () => Promise<AsyncContext | undefined>;
/**
 * Get a singleton instance of `AsyncLocalStorage` used to store and retrieve
 * async context for the current execution.
 */
export declare const getAsyncLocalStorage: () => Promise<AsyncLocalStorageIsh>;
export {};
//# sourceMappingURL=als.d.ts.map